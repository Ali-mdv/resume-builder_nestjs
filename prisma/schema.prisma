// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  first           String?          @db.VarChar(40)
  last            String?          @db.VarChar(40)
  password        String           @db.VarChar(128)
  email           String           @unique @db.VarChar(60)
  is_active       Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  basic_info      BasicInfo?
  skills          Skill[]
  education       Education[]
  work_experience WorkExperience[]
}

model Skill {
  id      String  @id @default(uuid())
  title   String  @db.VarChar(40)
  score   Int     @default(0) @db.SmallInt
  user    User?   @relation(fields: [user_id], references: [id])
  user_id String?
}

model BasicInfo {
  id       String   @id @default(uuid())
  first    String   @db.VarChar(40)
  last     String   @db.VarChar(40)
  email    String   @db.VarChar(60)
  age      Int      @db.SmallInt
  phone    String   @db.VarChar(12)
  address  String   @db.VarChar(100)
  business String[] @db.VarChar(20)
  language String[] @db.VarChar(20)
  about    String   @db.Text
  pro_pic  String?
  user     User     @relation(fields: [user_id], references: [id])
  user_id  String   @unique
}

model Education {
  id        String   @id @default(uuid())
  level     String   @db.VarChar(40)
  field     String   @db.VarChar(50)
  branch    String   @db.VarChar(50)
  institute String   @db.VarChar(60)
  entrance  DateTime
  graduate  DateTime
  User      User?    @relation(fields: [user_id], references: [id])
  user_id   String?
}

model WorkExperience {
  id              String    @id @default(uuid())
  job_position    String    @db.VarChar(40)
  company         String    @db.VarChar(50)
  start           DateTime
  finish          DateTime?
  present         Boolean?
  job_description String    @db.Text
  User            User?     @relation(fields: [user_id], references: [id])
  user_id         String?
}

model Contact {
  id       String   @id @default(uuid())
  fullName String   @db.VarChar(50)
  email    String   @db.VarChar(60)
  subject  String   @db.VarChar(50)
  message  String   @db.Text
  created  DateTime @default(now())
}
